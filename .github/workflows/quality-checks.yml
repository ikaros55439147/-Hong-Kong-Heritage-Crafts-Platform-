name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --format=json --output-file=eslint-report.json
        continue-on-error: true

      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: true

      - name: Run TypeScript compiler
        run: npm run type-check
        continue-on-error: true

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          JWT_SECRET: test_jwt_secret_key_for_testing_only

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload ESLint report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: eslint-report
          path: eslint-report.json

      - name: Comment PR with quality report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            // Read ESLint report
            let eslintReport = '';
            try {
              const eslintData = JSON.parse(fs.readFileSync('eslint-report.json', 'utf8'));
              const totalErrors = eslintData.reduce((sum, file) => sum + file.errorCount, 0);
              const totalWarnings = eslintData.reduce((sum, file) => sum + file.warningCount, 0);
              eslintReport = `ESLint: ${totalErrors} errors, ${totalWarnings} warnings`;
            } catch (e) {
              eslintReport = 'ESLint: Report not available';
            }
            
            const comment = `## ðŸ“Š Code Quality Report
            
            ${eslintReport}
            
            ### ðŸ“‹ Checklist
            - [ ] All tests passing
            - [ ] No ESLint errors
            - [ ] TypeScript compilation successful
            - [ ] Code coverage maintained
            
            *This comment is automatically generated by the CI pipeline.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Check for outdated packages
        run: npm outdated
        continue-on-error: true

      - name: License compliance check
        run: npx license-checker --summary
        continue-on-error: true

  performance-check:
    name: Performance Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        run: |
          npx @next/bundle-analyzer
          echo "Bundle analysis completed"

      - name: Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  accessibility-check:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          NODE_ENV: production

      - name: Wait for application
        run: sleep 30

      - name: Run accessibility tests
        run: |
          npx @axe-core/cli http://localhost:3000 --exit
          npx @axe-core/cli http://localhost:3000/courses --exit
          npx @axe-core/cli http://localhost:3000/products --exit